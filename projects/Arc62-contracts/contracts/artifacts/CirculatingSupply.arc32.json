{
  "hints": {
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "set_asset(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "set_not_circulating_address(address,string)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "arc62_get_circulating_supply(uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "asset_id": {
          "type": "uint64",
          "key": "asset_id"
        },
        "not_circulating_label_1": {
          "type": "bytes",
          "key": "burned"
        },
        "not_circulating_label_2": {
          "type": "bytes",
          "key": "locked"
        },
        "not_circulating_label_3": {
          "type": "bytes",
          "key": "generic"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 3,
      "num_uints": 1
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "CirculatingSupply",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "set_asset",
        "desc": "Set the ASA ID for the circulating supply - Authorization: ASA Manager Address",
        "args": [
          {
            "name": "asset_id",
            "type": "uint64",
            "desc": "ASA ID of the circulating supply"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "set_not_circulating_address",
        "desc": "Set non-circulating supply addresses - Authorization: ASA Manager Address",
        "args": [
          {
            "name": "address",
            "type": "address",
            "desc": "Address to assign to the label to"
          },
          {
            "name": "label",
            "type": "string",
            "desc": "Not-circulating label selector"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "arc62_get_circulating_supply",
        "desc": "Get ASA circulating supply",
        "readonly": true,
        "args": [
          {
            "name": "asset_id",
            "type": "uint64",
            "desc": "ASA ID of the circulating supply"
          }
        ],
        "returns": {
          "type": "uint64",
          "desc": "ASA circulating supply"
        }
      }
    ]
  }
}